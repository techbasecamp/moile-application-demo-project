// Mocks generated by Mockito 5.0.17 from annotations
// in demo_project/test/app/service/coupon/coupon_service_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i5;

import 'package:demo_project/data/local/local_storage.dart' as _i6;
import 'package:demo_project/models/coupons/check_coupon_response.dart' as _i2;
import 'package:demo_project/models/coupons/use_coupon_response.dart' as _i3;
import 'package:demo_project/repositories/coupon_repository.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeCheckCouponResponse_0 extends _i1.Fake
    implements _i2.CheckCouponResponse {}

class _FakeUseCouponResponse_1 extends _i1.Fake
    implements _i3.UseCouponResponse {}

/// A class which mocks [CouponRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCouponRepository extends _i1.Mock implements _i4.CouponRepository {
  MockCouponRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i2.CheckCouponResponse> checkCoupon(
          String? token, String? qrcode) =>
      (super.noSuchMethod(Invocation.method(#checkCoupon, [token, qrcode]),
              returnValue: Future<_i2.CheckCouponResponse>.value(
                  _FakeCheckCouponResponse_0()))
          as _i5.Future<_i2.CheckCouponResponse>);
  @override
  _i5.Future<_i3.UseCouponResponse> useCoupon(
          String? token, List<String>? qrcodes, List<_i2.Menu>? menus) =>
      (super.noSuchMethod(
              Invocation.method(#useCoupon, [token, qrcodes, menus]),
              returnValue: Future<_i3.UseCouponResponse>.value(
                  _FakeUseCouponResponse_1()))
          as _i5.Future<_i3.UseCouponResponse>);
}

/// A class which mocks [LocalStorage].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalStorage extends _i1.Mock implements _i6.LocalStorage {
  MockLocalStorage() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<String?> getString(String? key) =>
      (super.noSuchMethod(Invocation.method(#getString, [key]),
          returnValue: Future<String?>.value()) as _i5.Future<String?>);
  @override
  _i5.Future<void> setString(String? key, String? value) =>
      (super.noSuchMethod(Invocation.method(#setString, [key, value]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
  @override
  _i5.Future<void> remove(String? key) =>
      (super.noSuchMethod(Invocation.method(#remove, [key]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i5.Future<void>);
}
